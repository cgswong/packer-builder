# {{ ansible_managed }}
# Default Solr log4j config
# rootLogger log level may be programmatically overridden by -Dsolr.log.level
solr.log=${solr.log.dir}
log4j.rootLogger={{ solr_root_logger }}

# Console appender will be programmatically disabled when Solr is started with option -Dsolr.log.muteconsole
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout=org.apache.log4j.EnhancedPatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p (%t) [%X{collection} %X{shard} %X{replica} %X{core}] %c{1.} %m%n

# Rolling file size rotation with log cleanup.
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.MaxFileSize={{ solr_rolling_log_file_max_size }}
log4j.appender.file.MaxBackupIndex={{ solr_rolling_log_file_max_count }}

# File to log to and log format
log4j.appender.file.File=${solr.log}/solr.log
log4j.appender.file.layout=org.apache.log4j.EnhancedPatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p (%t) [%X{collection} %X{shard} %X{replica} %X{core}] %c{1.} %m%n

# Adjust logging levels that should differ from root logger
log4j.logger.org.apache.zookeeper={{ solr_zk_log_level }}
log4j.logger.org.apache.hadoop={{ solr_hadoop_log_level }}
log4j.logger.org.eclipse.jetty={{ solr_eclipse_log_level }}
log4j.logger.org.eclipse.jetty.server.Server={{ solr_eclipse_server_log_level }}
log4j.logger.org.eclipse.jetty.server.ServerConnector={{ solr_eclipse_conn_log_level }}

# set to INFO to enable infostream log messages
log4j.logger.org.apache.solr.update.LoggingInfoStream={{ solr_infostream_log_level }}
