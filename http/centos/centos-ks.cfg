# CentOS 7.x kickstart file
#
# CentOS Kickstart syntax and command reference  Guide:
# https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Installation_Guide/sect-kickstart-syntax.html
#
# For testing, start a local HTTP server temporarily and change directory to
# where this kickstart file resides and run:
#    $ python -m SimpleHTTPServer
# You don't have to restart the server every time you make changes.  Python
# will reload the file from disk every time.  As long as you save your changes
# they will be reflected in the next HTTP download.  Then to test with
# a PXE boot server, enter the following on the PXE boot prompt:
#    > linux text ks=http://<your_ip>:8000/<this_file>

eula --agreed
install
text
skipx
cdrom

lang en_US.UTF-8
keyboard us
timezone UTC --ntpservers=0.us.pool.ntp.org,1.us.pool.ntp.org,2.us.pool.ntp.org,3.us.pool.ntp.org

## Account setup
auth --enableshadow --passalgo=sha512
#rootpw --iscrypted --lock vagrant
rootpw --plaintext --lock vagrant
user --name=vagrant --groups=vagrant --plaintext --password=vagrant --homedir=/home/vagrant --shell=/bin/bash
selinux --permissive

## Devices
unsupported_hardware
network --onboot=yes --activate --device=eth0 --bootproto=dhcp --hostname=centos
services --enabled="NetworkManager,sshd,chronyd"
firstboot --disabled
firewall --disabled

## Repos
url --mirrorlist=http://mirrorlist.centos.org/?release=$releaserver&arch=$basearch&repo=os
repo --name="CentOS-$releasever - Base" --baseurl="http://mirror.centos.org/centos/$releasever/os/$basearch/"
repo --name="CentOS-$releasever - Updates" --baseurl="http://mirror.centos.org/centos/$releasever/updates/$basearch/"
repo --name="CentOS-$releasever - Extras" --baseurl="http://mirror.centos.org/centos/$releasever/extras/$basearch/"
repo --name="CentOS-$releasever - Plus" --baseurl="http://mirror.centos.org/centos/$releasever/centosplus/$basearch/"

## Partitioning
# The biosdevname and ifnames options ensure we get "eth0" as our interface
# even in environments like virtualbox that emulate a real NW card
bootloader --location=mbr --append="no_timer_check console=tty0 console=ttyS0,115200 net.ifnames=0 biosdevname=0" --timeout=1
zerombr
clearpart --all --initlabel
#autopart --type=lvm --fstype=xfs
part biosboot --fstype=biosboot --size=1
part /boot --fstype=xfs --size=1024 --ondisk=sda --asprimary
part pv.01  --size=15360 --grow --ondisk=sda
volgroup sysvg pv.01
logvol swap --vgname=sysvg --recommended --label=lvswap --name=swap --fstype=swap
logvol / --vgname=sysvg --size=10240 --label=lvroot --name=root --fstype=xfs
logvol /tmp --vgname=sysvg --size=2048 --label=lvtmp --name=tmp --fstype=xfs --fsoptions="nodev,nosuid"

reboot

## Packages
%packages --ignoremissing --excludedocs
# `Core` and `Base` groups are always selected so no need to specify

bash-completion
binutils
centos-release
chrony
expect
grub2
make
mlocate
python

-net-tools
-fprintd-pam
-intltool
-iprutils
-plymouth
-postfix
-rdma
# Microcode updates cannot work in a VM
-microcode_ctl
# Unnecessary firmware
-*-firmware
# Don't build rescue initramfs
-dracut-config-rescue
%end

## Add-on Section, disable Kdump
%addon com_redhat_kdump --disable
%end

## Post Install script
%post --erroronfail --log=/var/log/kickstart-post.log
# Update root certs
echo -e "\n$(date +"[%F %X,000]") [INFO] Update root certs."
curl --silent --show-error --location --output /etc/pki/tls/certs/ca-bundle.crt http://curl.haxx.se/ca/cacert.pem

## Packages
# Setup EPEL repo
echo -e "\n$(date +"[%F %X,000]") [INFO] Setup EPEL repo."
yum -y install epel-release
echo -e "\n$(date +"[%F %X,000]") [INFO] Update packages."
yum -y update

# Setup IUS repo
echo -e "\n$(date +"[%F %X,000]") [INFO] Setup IUS repo."
yum -y install https://centos7.iuscommunity.org/ius-release.rpm
rpm --import /etc/pki/rpm-gpg/IUS-COMMUNITY-GPG-KEY
yum -y update

# Install additional packages
echo -e "\n$(date +"[%F %X,000]") [INFO] Install additional packages."
yum -y install \
  acpid \
  bind-utils \
  bzip2 \
  cloud-init \
  cloud-utils-growpart \
  deltarpm \
  dkms \
  dracut-config-generic \
  gcc \
  git \
  htop \
  iftop \
  java-1.8.0-openjdk-headless \
  jq \
  lsof \
  make \
  nfs-utils \
  ntp \
  perl \
  python-pip \
  python36u \
  rsync \
  screen \
  sysstat \
  tcpdump \
  tmux \
  traceroute \
  tree \
  vim-enhanced \
  wget \
  yum-plugin-ovl \
  yum-utils

## Kernel
# Enable latest kernel
echo -e "\n$(date +"[%F %X,000]") [INFO] Enabling latest kernel."
grub2-set-default 0

# Customize the initramfs
echo -e "\n$(date +"[%F %X,000]") [INFO] Customizing initramfs in /etc/dracut.conf.d"
pushd /etc/dracut.conf.d
# There's no floppy controller, but probing for it generates timeouts
echo 'omit_drivers+=" floppy "' > nofloppy.conf
popd

# Setup Kernel boot
echo -e "\n$(date +"[%F %X,000]") [INFO] Setting boot kernel in /etc/sysconfig/kernel."
cat <<EOF > /etc/sysconfig/kernel
# UPDATEDEFAULT specifies if new-kernel-pkg should make
# new kernels the default
UPDATEDEFAULT=yes

# DEFAULTKERNEL specifies the default kernel package type
DEFAULTKERNEL=kernel
EOF

# Make sure firstboot doesn't start
echo -e "\n$(date +"[%F %X,000]") [INFO] Ensuring firstboot does not run in /etc/sysconfig/firstboot."
echo "RUN_FIRSTBOOT=NO" > /etc/sysconfig/firstboot

# Configure grub to wait just 1 second before booting
echo -e "\n$(date +"[%F %X,000]") [INFO] Setting Grub wait time to 1 second."
sed -i 's/^GRUB_TIMEOUT=[0-9]\+$/GRUB_TIMEOUT=1/' /etc/default/grub && grub2-mkconfig -o /boot/grub2/grub.cfg

echo -e "\n$(date +"[%F %X,000]") [INFO] Cleaning yum."
yum -y clean all

## Services
# Disable using RAM (mounting tmpfs) on /tmp. Really only an issue for low memory systems, where you need to maximize RAM, or large usage of /tmp.
# Otherwise can be useful since it speeds up /tmp access
echo -e "\n$(date +"[%F %X,000]") [INFO] Disabling tmpfs usage for /tmp."
systemctl mask tmp.mount

# Disable firewalld (do not want it)
echo -e "\n$(date +"[%F %X,000]") [INFO] Disabling firewalld service."
systemctl mask firewalld
systemctl stop firewalld

## Networking
# Setup networking
echo -e "\n$(date +"[%F %X,000]") [INFO] Setting up networking in /etc/sysconfig/network."
cat > /etc/sysconfig/network << EOF
NETWORKING=yes
NOZEROCONF=yes
EOF

# Simple eth0 config, again not hard-coded to the build hardware
echo -e "\n$(date +"[%F %X,000]") [INFO] Configuring eth0 in /etc/sysconfig/network-scripts/ifcfg-eth0"
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
DEVICE="eth0"
BOOTPROTO="dhcp"
ONBOOT="yes"
TYPE="Ethernet"
USERCTL="yes"
PEERDNS="yes"
PERSISTENT_DHCLIENT="1"
EOF

# Change dhcp client retry/timeouts
echo -e "\n$(date +"[%F %X,000]") [INFO] Optimizing DNS in /etc/dhcp/dhclient.conf"
cat  >> /etc/dhcp/dhclient.conf << EOF

timeout 300;
retry 30;
EOF

# Disable password authentication and DNS checks in SSHD
echo -e "\n$(date +"[%F %X,000]") [INFO] Optimizing DNS in /etc/ssh/sshd_config."
sed -i "s/^\s*UseDNS.*/UseDNS no/" /etc/ssh/sshd_config
sed -i "s/^\s*GSSAPIAuthentication.*/GSSAPIAuthentication no/" /etc/ssh/sshd_config
##sed -i "s/^\s*PasswordAuthentication.*/PasswordAuthentication no/" /etc/ssh/sshd_config

echo -e "\n$(date +"[%F %X,000]") [INFO] Optimizing DNS in /etc/sysconfig/sshd"
cat >>/etc/sysconfig/sshd <<EOF

# Decrease connection time by preventing reverse DNS lookups
# (see https://lists.centos.org/pipermail/centos-devel/2016-July/014981.html and man sshd for more information)
OPTIONS="-u0"
EOF

# Apply tuning profile
echo -e "\n$(date +"[%F %X,000]") [INFO] Applying tuning profile in /etc/tuned/active_profile"
echo "virtual-guest" > /etc/tuned/active_profile

# systemd should generate a new machine ID during the first boot, to avoid having multiple instances with the same ID in the local
# network. /etc/machine-id should be empty, but it must exist to prevent boot errors (e.g.  systemd-journald failing to start).
echo -e "\n$(date +"[%F %X,000]") [INFO] Clearing /etc/machine-id"
:>/etc/machine-id

## Accounts and Security
# Configure vagrant user in sudoers
echo -e "\n$(date +"[%F %X,000]") [INFO] Configuring Vagrant user SUDO access."
echo "%vagrant ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/vagrant
chmod 0440 /etc/sudoers.d/vagrant
cp /etc/sudoers /etc/sudoers.orig
sed -i "s/^\(.*requiretty\)$/#\1/" /etc/sudoers

# Use default insecure Vagrant user public key
echo -e "\n$(date +"[%F %X,000]") [INFO] Configuring Vagrant user insecure keypair."
mkdir -m 0700 -p /home/vagrant/.ssh
curl --location --silent --show-error "https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub" --output /home/vagrant/.ssh/authorized_keys
chown -R vagrant:vagrant /home/vagrant/.ssh
chmod 0600 /home/vagrant/.ssh/authorized_keys

# Set login greeting
echo -e "\n$(date +"[%F %X,000]") [INFO] Setting MOTD."
cat > /etc/issue /etc/issue.net <<EOF
CentOS 7.3 \s release \v
Kernel \r on an \m
EOF

%end
